pvt is a simple implementation of a generalized form of the psychomotor vigilance task (PVT).
The PVT is a psychometric test used for measuring alertness and sustained attention, often to
detect sleep debt. pvt runs in the terminal and has no dependencies other than ncurses.

The implementation of pvt uses the following model.

A PVT configuration is a tuple c of natural numbers (n, m, t, d, l, f) where
  n and m are interstimulus bounds in seconds, n <= m <= 2048,
  t is the stimulus timeout in milliseconds, t <= INT_MAX
  d is the test duration is seconds, m < d <= 2048,
  l is the lapse threshold in milliseconds, l < t,
  f is the false start threshold in milliseconds, f < l - 1.

A PVT test is a set of k>0 events generated under configuration c.
An event is a tuple (i, s), where
  i is a random interstimulus interval, n <= i <= m,
  s is the duration a stimulus is shown, 0 <= s <= t.

A stimulus is shown until either a key (enter) is pressed, or t seconds elapse.
The goal of the testee is to maximize the count of events where f < s_k < l.

Key presses besides enter, or which are pressed when stimulus is not shown are
counted as errors.

By default, pvt uses the PVT-B, with the configuration (1, 4, 30, 3*60, 355, 100).

A more typical PVT configuration (which can be used with -p) is (2, 10, 30, 10*60, 500, 100).

These values can be changed with the matching flag (e.g., set the lapse threshold with `pvt -l 500`).

If PVT_FILE is set, the results will be stored in it as records delinated by newlines
and fields delineated by pipe characters.  If a file is specified on the command line,
it will override PVT_FILE. If an empty string is provided as an argument, no file will be used.

pvt is written with portablity in mind but only tested on OpenBSD. Deviations from posix limiting
portability should be regarded as bugs.

pvt can be built by running make (any make should work). A C compiler and ncurses are required to
build.  There is an install target but it defaults to "/usr/local/bin/". To change it set BIN (e.g.,
`make && make install BIN=/usr/bin/`).

Limitations:

The response time immediately when responding to a stimulus. This may reduce time pressure.

The recorded response time is only an upper bound approximating the actual response time.
	Scheduling latency and slow hardware/software may cause a significant difference between the two.

After the test finishes, no further stimuli are presented but the final stimulus will still record a
	response (i.e, the final response time may be after the end of the test).

There is no man page. (TODO)

There are no tests. (TODO)

There is no way to export latencies for further analysis. (TODO)
